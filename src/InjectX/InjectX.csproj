<Project Sdk="Microsoft.NET.Sdk">

  <!--  +++++ Properties +++++  -->
  
  <!--  Assembly  -->
  <PropertyGroup>
    <AssemblyName>InjectX</AssemblyName>
    <ImplicitUsings>enable</ImplicitUsings>
    <IncludeSymbols>true</IncludeSymbols>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <RootNamespace>InjectX</RootNamespace>
    <TargetFramework>netstandard2.1</TargetFramework>
    <!--  Only increment for incompatible API changes  -->
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </PropertyGroup>

  <!--  Build  -->
  <PropertyGroup>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>
  
  <!--  Package  -->
  <PropertyGroup>
    <Authors>Ch0pstix</Authors>
    <Copyright>© Isaac Bickel 2023</Copyright>
    <Description>Automatic registration extensions for Microsoft.Extensions.DependencyInjection.</Description>
    <NeutralLanguage>en-US</NeutralLanguage>
    <PackageIcon>icon.png</PackageIcon>
    <PackageId>Ch0pstix.InjectX</PackageId>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageLicenseUrl>https://github.com/Ch0pstix/InjectX/blob/master/LICENSE.txt</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/Ch0pstix/InjectX</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageTags>assembly-scanning;automation;conventions;dependency-injection;dotnet-standard;mvvm;services</PackageTags>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <Title>InjectX</Title>
    <VersionPrefix>2.0.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
  </PropertyGroup>
  
  <!--  Repository  -->
  <PropertyGroup>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/Ch0pstix/InjectX</RepositoryUrl>
  </PropertyGroup>

  <!--  +++++ References +++++  -->

  <!--  Global Usings  -->
  <ItemGroup>
    <Using Include="System.Diagnostics" />
    <Using Include="System.Diagnostics.CodeAnalysis" />
    <Using Include="System.Reflection" />
    <Using Include="System.Runtime.CompilerServices" />
    <Using Include="System.Text" />
    <Using Include="Microsoft.Extensions.DependencyInjection" />
    <Using Include="Microsoft.Extensions.DependencyInjection.Extensions" />
    <Using Include="Microsoft.Extensions.Internal" />
    <Using Include="InjectX.Exceptions" />
    <Using Include="InjectX.Internals" />
    <Using Alias="SR" Include="InjectX.Resources.Strings" />
  </ItemGroup>

  <!--  Included Resources  -->
  <ItemGroup>
    <Compile Update="Resources\Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources\Strings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
      <Visible>false</Visible>
    </None>
    <None Include="..\..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
      <Visible>false</Visible>
    </None>
    <None Include="..\..\res\icon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
      <Visible>false</Visible>
    </None>
  </ItemGroup>
  
  <!--  Package References  -->
  
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="7.0.0" />
    <PackageReference Include="PolySharp" Version="1.12.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

</Project>
